-- This file is for use with Corona(R) SDK
--
-- This file is automatically generated with PhysicsEdtior (http://physicseditor.de). Do not edit
--
-- Usage example:
--			local scaleFactor = 1.0
--			local physicsData = (require "shapedefs").physicsData(scaleFactor)
--			local shape = display.newImage("objectname.png")
--			physics.addBody( shape, physicsData:get("objectname") )
--

-- copy needed functions to local scope
local unpack = unpack
local pairs = pairs
local ipairs = ipairs

local M = {}

function M.physicsData(scale)
	local physics = { data =
	{ 
		
		["o_totem"] = {                    
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   -82, 148  ,  -85, 30  ,  -75, -53  ,  3, -50  ,  15, 146  }
            }
             ,
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   77, -69  ,  37, -47  ,  3, -50  ,  1, -98  ,  30, -121  ,  94, -113  }
            }
             ,
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   -76, -113  ,  -57, -149  ,  -7, -138  ,  1, -98  ,  3, -50  ,  -75, -53  }
            }
		}
		
		, 
		["g_totem"] = {
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   3, 49  ,  -75, 52  ,  -85, -31  ,  -82, -149  ,  15, -147  }
            }
             ,
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   30, 120  ,  1, 97  ,  3, 49  ,  37, 46  ,  77, 68  ,  94, 112  }
            }
             ,
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   3, 49  ,  1, 97  ,  -7, 137  ,  -57, 148  ,  -76, 112  ,  -75, 52  }
            }   
		}
		
		, 
		["ahead_ben"] = {
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   -12, 78  ,  -12, 47  ,  14, 48  ,  13, 78  }
            }
             ,
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   11, -74  ,  16, -62  ,  6, -42  ,  -6, -42  ,  -15, -65  ,  -5, -77  }
            }
             ,
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   -12, 47  ,  -25, 38  ,  -6, -42  ,  6, -42  ,  23, 39  ,  14, 48  }
            }    
		}
		
		, 
		["stopped_ben"] = {
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   -12, 78.5  ,  -12, 47.5  ,  14, 48.5  ,  13, 78.5  }
            }
             ,
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   25, -62.5  ,  12, -44.5  ,  2, -45.5  ,  -6, -68.5  ,  6, -77.5  ,  19, -75.5  }
            }
             ,
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   -12, 47.5  ,  -25, 38.5  ,  2, -45.5  ,  12, -44.5  ,  23, 39.5  ,  14, 48.5  }
            }
		}
		
		, 
		["back_ben"] = {
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   -12, 78.5  ,  -12, 47.5  ,  14, 48.5  ,  13, 78.5  }
            }
             ,
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   0, -77.5  ,  9, -61.5  ,  -1, -43.5  ,  -12, -41.5  ,  -24, -61.5  ,  -18, -77.5  }
            }
             ,
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   -12, 47.5  ,  -25, 38.5  ,  -12, -41.5  ,  -1, -43.5  ,  23, 39.5  ,  14, 48.5  }
            }
		}
		
		, 
		["stopped_ren"] = {
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   14, -47  ,  -12, -46  ,  -12, -77  ,  13, -77  }
            }
             ,
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   -15, 66  ,  -6, 43  ,  6, 43  ,  16, 63  ,  11, 75  ,  -5, 78  }
            }
             ,
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   23, -38  ,  6, 43  ,  -6, 43  ,  -25, -37  ,  -12, -46  ,  14, -47  }
            }
		}
		
		, 
		["back_ren"] = {
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   14, -47.5  ,  -12, -46.5  ,  -12, -77.5  ,  13, -77.5  }
            }
             ,
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   -24, 62.5  ,  -12, 42.5  ,  -1, 44.5  ,  9, 62.5  ,  0, 78.5  ,  -18, 78.5  }
            }
             ,
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   23, -38.5  ,  -1, 44.5  ,  -12, 42.5  ,  -25, -37.5  ,  -12, -46.5  ,  14, -47.5  }
            }
		}
		
		, 
		["ahead_ren"] = {
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   14, -47.5  ,  -12, -46.5  ,  -12, -77.5  ,  13, -77.5  }
            }
             ,
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   6, 78.5  ,  -6, 69.5  ,  2, 46.5  ,  12, 45.5  ,  25, 63.5  ,  19, 76.5  }
            }
             ,
            {
            pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
            shape = {   23, -38.5  ,  12, 45.5  ,  2, 46.5  ,  -25, -37.5  ,  -12, -46.5  ,  14, -47.5  }
            }
		}
		
	} }

        -- apply scale factor
        local s = scale or 1.0
        for bi,body in pairs(physics.data) do
            for fi,fixture in ipairs(body) do
                if(fixture.shape) then
                    for ci,coordinate in ipairs(fixture.shape) do
                        fixture.shape[ci] = s * coordinate
                    end
                else
                    fixture.radius = s * fixture.radius
                end
            end
        end
	
	function physics:get(name)
		return unpack(self.data[name])
	end

	function physics:getFixtureId(name, index)
                return self.data[name][index].pe_fixture_id
	end
	
	return physics;
end

return M

